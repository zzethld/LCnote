我是真的菜，做完之后长啸。

思路：不关心值的具体大小，转而关心他在数组中的具体位置。
	利用两数组相同位置nums1[k],nums2[k]之间的大小关系来判定数组中第2k小的数位置。（感觉有点抽象？）

模式匹配：
	中位数：中间数的大小（奇偶）
	
	
我为什么可以没有想到？
	看到这题几乎一瞬间就想到了利用二分法（利用nums1的中位数，寻找该数在nums2中的位置，根据大小信息减掉已知位置），这个思路导致我第一天45min一点进展都没有。而且做出来之后复杂度为logmlogn级别，并不符合要求。后参考大佬思路才明白，若使用二分法查找其位置，有点着相了。而且抛开边界控制更麻烦不说，复杂度也并没有减少多少。题目其实已经给了提示，成倍减小所求数。（想想就觉得自己垃圾，如果没有题目要求，那么这个方法可能很大程度都想不到，佩服出题者）
	
落地的困难：
	完成时间大概在三小时，真菜。这道题就已经给了相当多的提示而言，思路并不难，难的是代码的落地，以及边界的判断。
	
总结：
	自己在面对难题的时候，想的就是逃避，不想去刷。而且做完之后回看这道题的思路和落地的边界控制，其实并不难，相反来说甚至很单一。我觉得是可能对自己不够自信，而且在思路的理清上面做的也并不是很好。我现在都难以想象，这道题花费时间长达三小时，时间究竟花在了什么地方。在20分钟的时候，思路的雏形就已经具备，但是由于最开始思路的偏移导致了自己更多时间的花费。我觉得思路偏移也没错，错的是自己也并没有将偏移后的思路实现。
	我觉得自己欠缺一种耐心，不要急于求成。思路实现快快冲，细节补充慢慢来。
	
	
核心思路：
边界控制条件：在减少数组的过程中，注意数组大小，不要虚空减小。